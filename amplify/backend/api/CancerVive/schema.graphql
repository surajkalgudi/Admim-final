type CreatePatients @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Age: Int
  MaritalStatus: String
  Children: Int
  Gender: String
  Hospital: String
  Doctor: String
  Uhid: Int
  PhoneNumber: Int
  CancerType: String
  Stage: String
  TreatmentPlan: String
  Comorbidities: String
  History: String
  SocialHistory: String
  FamilyHistory: String
  Address: String
}

type UpdatePatients @model @auth(rules: [{allow: public}]) {
  id: ID!
  Uhid: Int
  Date: String
  BloodPressure: String
  HbPercentage: String
  Sp02: String
  Fbs: String
  Ppbs: String
  Height: Float
  Weight: Float
  Bmi: Float
  TrunkFat: String
  HbA1c: String
  TotalSkeletalMuscle: String
  TrunkSkeletalMuscle: String
  LegsSkeletalMuscle: String
  TotalFat: String
  LeftHandSP: String
  RightHandSP: String
  LeftLegSP: String
  HandsSkeletal: String
  LegsFat: String
  MidArm: String
  TricepsSkinFold: String
  CalfSkinCircumference: String
  HandsFat: String
  RightLegSP: String
  LeftLegEndurance: String
  RightLegEndurance: String
  RightHandEndurance: String
  Waist: String
  RbcCount: String
  CalfCircumference: String
  Neutrophil: String
  LeftHandEndurance: String
  Lymphocyte: String
  Basophil: String
  Monocyte: String
  HctPcv: String
  Hip: String
  Albumin: String
  WbcCount: String
  Eosinophil: String
  Urea: String
  TotalCholesterol: String
  LdlCholesterol: String
  HdlCholesterol: String
  Globulin: String
  Triglyceride: String
  DischargeDate: String
  VldlCholesterol: String
  Creatinine: String
}

type Appointments @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String!
  Uhid: Int
  Doctor: String
  Description: String
  Date: String
  Time: String
  isComplete: Boolean
}

type Test @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Uhid: Int
  Tests: String!
  isComplete: Boolean
}
 